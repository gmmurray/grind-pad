/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NoAuthRouteImport } from './routes/_no-auth'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NoAuthSignupRouteImport } from './routes/_no-auth.signup'
import { Route as NoAuthLoginRouteImport } from './routes/_no-auth.login'
import { Route as AuthHomeRouteImport } from './routes/_auth.home'
import { Route as AuthGamesRouteImport } from './routes/_auth.games'

const NoAuthRoute = NoAuthRouteImport.update({
  id: '/_no-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NoAuthSignupRoute = NoAuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => NoAuthRoute,
} as any)
const NoAuthLoginRoute = NoAuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NoAuthRoute,
} as any)
const AuthHomeRoute = AuthHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)
const AuthGamesRoute = AuthGamesRouteImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/games': typeof AuthGamesRoute
  '/home': typeof AuthHomeRoute
  '/login': typeof NoAuthLoginRoute
  '/signup': typeof NoAuthSignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/games': typeof AuthGamesRoute
  '/home': typeof AuthHomeRoute
  '/login': typeof NoAuthLoginRoute
  '/signup': typeof NoAuthSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_no-auth': typeof NoAuthRouteWithChildren
  '/_auth/games': typeof AuthGamesRoute
  '/_auth/home': typeof AuthHomeRoute
  '/_no-auth/login': typeof NoAuthLoginRoute
  '/_no-auth/signup': typeof NoAuthSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/games' | '/home' | '/login' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/games' | '/home' | '/login' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_no-auth'
    | '/_auth/games'
    | '/_auth/home'
    | '/_no-auth/login'
    | '/_no-auth/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  NoAuthRoute: typeof NoAuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_no-auth': {
      id: '/_no-auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NoAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_no-auth/signup': {
      id: '/_no-auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof NoAuthSignupRouteImport
      parentRoute: typeof NoAuthRoute
    }
    '/_no-auth/login': {
      id: '/_no-auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NoAuthLoginRouteImport
      parentRoute: typeof NoAuthRoute
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/games': {
      id: '/_auth/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof AuthGamesRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthGamesRoute: typeof AuthGamesRoute
  AuthHomeRoute: typeof AuthHomeRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthGamesRoute: AuthGamesRoute,
  AuthHomeRoute: AuthHomeRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface NoAuthRouteChildren {
  NoAuthLoginRoute: typeof NoAuthLoginRoute
  NoAuthSignupRoute: typeof NoAuthSignupRoute
}

const NoAuthRouteChildren: NoAuthRouteChildren = {
  NoAuthLoginRoute: NoAuthLoginRoute,
  NoAuthSignupRoute: NoAuthSignupRoute,
}

const NoAuthRouteWithChildren =
  NoAuthRoute._addFileChildren(NoAuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  NoAuthRoute: NoAuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
